name: Deploy client and server

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Note: Environment variables used for server deployment only
env:
  AZURE_WEBAPP_NAME: mars-server
  AZURE_WEBAPP_PACKAGE_PATH: './server'
  NODE_VERSION: '18.x'

jobs:
  deploy_client:
    runs-on: ubuntu-latest
    name: Deploy client
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    # Run client deployment
    - name: Deploy to Azure Static Web Apps
      id: deploy-static-web-app
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_RED_WAVE_02CDDA510 }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "/client"
        api_location: "/server"
        output_location: "/dist"

  build_server:
    name: Build server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      # Create .env file for server and build server
      - name: Create .env file
        working-directory: server
        run: |
          touch .env
          echo "CONNECTION_STRING=${{ secrets.CONNECTION_STRING }}" >> .env
          echo "PORT=8000" >> .env
          echo "NODE_ENV=development" >> .env
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> .env

      - name: Build server
        working-directory: server
        run: |
          yarn install
          yarn build

      - name: Compress build output
        working-directory: server
        run: zip -r out.zip ./* .env

      - name: Upload build output for deployment
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./server/out.zip


  deploy_server:
    name: Deploy server
    runs-on: ubuntu-latest
    needs: build_server
    environment:
      name: production
      url: ${{ steps.deploy-webapp.outputs.webapp-url }}
    steps:
      - name: Download build output
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip build output for Azure deployment
        run: unzip out.zip

      # Run server deployment
      - name: Deploy to Azure Web App
        id: deploy-webapp
        uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
