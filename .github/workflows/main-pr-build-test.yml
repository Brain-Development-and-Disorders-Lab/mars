name: Build and test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:

env:
  CONNECTION_STRING: mongodb://admin:metadataadmin@localhost:27017/
  PORT: 8000

jobs:
  build-server:
    name: Build server
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Create .env file for server
        working-directory: server
        run: |
          touch .env
          echo "CONNECTION_STRING=${{ env.CONNECTION_STRING }}" >> .env
          echo "PORT=8000" >> .env
          echo "NODE_ENV=development" >> .env
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> .env

      - name: Build server
        working-directory: server
        run: |
          yarn install
          yarn build

      - name: Upload server build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mars-server
          path: server/dist/

  build-client:
    name: Build client
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build client
        working-directory: client
        run: |
          yarn install
          yarn build

  test-server:
    name: Test server
    runs-on: ubuntu-latest
    needs: build-server

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: mars-server
          path: server/dist/

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Test server
        working-directory: server
        run: |
          yarn install
          yarn test

  test-client:
    name: Test client
    runs-on: ubuntu-latest
    needs: [build-server, test-server, build-client]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Start Docker containers
        run: docker compose -f "docker-compose.yml" up -d --build

      - name: Test client components
        working-directory: client
        run: |
          yarn install
          yarn test:components

      - uses: actions/download-artifact@v4
        with:
          name: mars-server
          path: server/dist/

      - name: Create .env file for server
        working-directory: server
        run: |
          touch .env
          echo "CONNECTION_STRING=${{ env.CONNECTION_STRING }}" >> .env
          echo "PORT=8000" >> .env
          echo "NODE_ENV=development" >> .env
          echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> .env
          echo "CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> .env

      - name: Start server
        working-directory: server
        run: yarn start &

      - name: Wait for server start
        run: sleep 5

      - name: Start client
        working-directory: client
        run: yarn start &

      - name: Wait for client start
        run: sleep 5

      - name: Create .env file for client
        working-directory: client
        run: |
          touch .env
          echo "CONNECTION_STRING=${{ env.CONNECTION_STRING }}" >> .env

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          wait-on: http://localhost:8080
          working-directory: client

      - name: Upload Cypress screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: cypress-screenshots
          path: client/test/cypress/screenshots
